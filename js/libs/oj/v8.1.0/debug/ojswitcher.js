/**
 * @license
 * Copyright (c) 2014, 2020, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 * @ignore
 */
define(["ojs/ojcore","ojs/ojcomponentcore","ojs/ojcustomelement"],(function(e,t){"use strict";var o={properties:{value:{type:"string",value:""}},methods:{setProperty:{},getProperty:{},setProperties:{},refresh:{},getNodeBySubId:{},getSubIdByNode:{}},extension:{}};function i(o){var i=this,n=o.element,r=!0,s=null;function l(){s=null}function d(e,o){var i=n.value;void 0===e._ojSwitcher_orig_display_style&&Object.defineProperty(e,"_ojSwitcher_orig_display_style",{value:e.style.display}),o===i?function(e){!("none"===e.style.display)?r&&t.subtreeShown(e,{initialRender:!0}):(e.style.display="",t.subtreeShown(e,r?{initialRender:!0}:void 0))}(e):function(e){!("none"===e.style.display)&&(e.style.display="none",t.subtreeHidden(e))}(e)}i._caseElementMutationObserver=new MutationObserver((function(e){e.forEach((function(e){"childList"===e.type&&(e.addedNodes&&Array.prototype.forEach.call(e.addedNodes,(function(e){if(1===e.nodeType){var t=e.getAttribute("slot");d(e,t),l()}})),e.removedNodes&&Array.prototype.forEach.call(e.removedNodes,(function(e){1===e.nodeType&&(void 0!==e._ojSwitcher_orig_display_style&&(e.style.display=e._ojSwitcher_orig_display_style),l())})))}))})),this.createDOM=function(){i._caseElementMutationObserver.observe(n,{childList:!0})},this.updateDOM=function(){for(var t=(s||(s=e.BaseCustomElementBridge.getSlotMap(n)),s),o=Object.keys(t),i=0;i<o.length;i++)for(var l=o[i],a=t[l],c=0;c<a.length;c++){d(a[c],l)}r&&(r=!1)}}o.extension._CONSTRUCTOR=i,o.extension._CONTROLS_SUBTREE_HIDDEN=!0,e.CustomElementBridge.register("oj-switcher",{metadata:o})}));